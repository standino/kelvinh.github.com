#+TITLE:       Emacs 使用笔记
#+AUTHOR:      Will Chang
#+EMAIL:       changwei.cn@gmail.com
#+DATE:        2012-11-27 Tue
#+URI:         /wiki/myemacs/
#+TAGS:        :Emacs:
#+KEYWORDS:    Lisp, Scheme, Emacs, Linux, cygwin, Java,  Org-page, Programming,编程
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+DESCRIPTION: Emacs 使用笔记

----
* Find files and tags  Read Java code

** Best Practice 
  
 - Use Alt+Shit+x to invoke anything, then input the file name, or the functions 
 - gtags-find-tag and gtags-find-rtag to find the java method declare and reference 
 - rgrep to find in the files
 - M-x multi-occur : find words in buffer, o		occur-mode-goto-occurrence-other-window, C-c C-c		occur-mode-goto-occurrence

** Shell

*find-dired* : Find a file : -iname d_qt_quote.sql 运行外部命令 find , 产生文件列表，然后进入 dired 模式。

*find-grep-dired* : 运行外部命令 find，用 grep 过滤文件， ls 产生目录列表，然后进入 dired 模式，这样列出所有包含某些字符的文件列表。
可以使用 dired-do-query-replace-regexp 在文件列表中查找并替换。可以递归所有子目录。可以用各种条件过滤文件，详细可以查看 [[shell.html#find][find]] 命令
的帮助。 

rgrep: 	首先输入的是需要搜索的内容，回车后，提示目标文件的类型，此时可以输入各个别名，比如ch，搜索所有的C++源码文件，随后输入的是
搜索开始的目录。 	递归搜索目录中的内容，支持一些预定义的别名，比如ch表示所有的c++代码文件，hh表示所有的c++头文件等等。这个估计是
写程序时，最好用的grep命令。 

lgrep: 	提示内容与rgrep的都一样，唯一不同的是，lgrep只搜索当前指定目录中的内容，不会对子目录进行递归搜索。 	lgrep中的l应该是表示本
层目录的（local）。对于在很大的，有很多子目录的文件夹中，只想搜索限定目录中，限定文件类型的时候，这个命令很方便。 


** [[http://www.gnu.org/software/global/globaldoc.html][Gtags]]

 - gtags-find-tag
 - gtags-find-rtag
 - gtags-find-with-grep
 - gtags-find-symbol

<src lang="lisp">
(define-key xgtags-mode-map [(control .)] 'xgtags-find-tag-from-here)
(define-key xgtags-mode-map [(control ,)] 'delete-other-windows)
(define-key xgtags-mode-map [(meta .)] 'xgtags-find-symbol)
(define-key xgtags-mode-map [(meta ,)] 'xgtags-find-pattern)
(define-key xgtags-mode-map (kbd "C-M-.") 'xgtags-find-rtag)
(define-key xgtags-mode-map (kbd "C-M-,") 'grep-find)
(define-key xgtags-mode-map (kbd "C-M-/") 'xgtags-find-tag)
(define-key xgtags-mode-map (kbd "M-p") 'xgtags-pop-stack)

</src>

** Ctags
 
 1. Install [[http://ctags.sourceforge.net/ctags.html][ctags]] from cygwin.
 2. Change the directory to c:/dsw
 3. execute <code>etags --file-scope=no -R</code>
 4. M-. [TAG] <RET>, select the tag file(c:/dsw/TAGS).The default tag is the identifier under the cursor.
 1.  M-*   Pop back to where you previously invoked "M-.".
 1.  C-u M-.  Find the next definition for the last tag.

----

* [[https://github.com/kelvinh/org-page][org-page]]
 - [[https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org][一年成为Emacs高手(像神一样使用编辑器)]]
 - [[https://github.com/redguardtoo/emacs.d][试一试这个配置]]

* 在cygwin中安装emacs 

** [[https://github.com/cfg/apt-cyg][apt-cyg]]
#+BEGIN_SRC 
curl -o /usr/bin/apt-cyg https://raw.github.com/cfg/apt-cyg/master/apt-cyg

chmod +x /usr/bin/apt-cyg

git clone https://github.com/standino/emacs.d.git ~/.emacs.d

http_proxy=http://127.0.0.1:8087 emacs -nw

#+END_SRC

