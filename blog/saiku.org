#+TITLE:       大数据下BI报表所需要的技术
#+AUTHOR:      Will
#+EMAIL:       will@will-K42JA
#+DATE:        2014-06-16 一
#+URI:         ./blog/%y/%m/%d/saiku
#+KEYWORDS:    saiku
#+TAGS:        :saiku:
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: 使用saiku开发OLAP系统

* 基本概念

** OLAP 介绍

Online analytical processing(OLAP)即 联机分析处理 。

联机分析处理（OLAP）系统是数据仓库系统最主要的应用，专门设计用于支持复杂的分析操作，侧重对决策人员和高层管理人员的决策支持，可以根
据分析人员的要求快速、灵活地进行大数据量的复杂查询处理，并且以一种直观而易懂的形式将查询结果提供给决策人员，以便他们准确掌握企业
（公司）的经营状况，了解对象的需求，制定正确的方案。

**** 逻辑概念

    1. 维（Dimension）：是人们观察数据的特定角度，是考虑问题时的一类属性，属性集合构成一个维（时间维、地理维等）。
    2. 维的层次（Level）：人们观察数据的某个特定角度（即某个维）还可以存在细节程度不同的各个描述方面（时间维：日期、月份、季度、年）。
    3. 维的成员（Member）：维的一个取值，是数据项在某维中位置的描述。（“某年某月某日”是在时间维上位置的描述）。
    4. 度量（Measure）：多维数组的取值。（2000年1月，上海，笔记本电脑，0000）。
    5. OLAP的基本多维分析操作有钻取（Drill-up和Drill-down）、切片（Slice）和切块（Dice）、以及旋转（Pivot）等。
    - 钻取：是改变维的层次，变换分析的粒度。它包括向下钻取（Drill-down）和向上钻取（Drill-up）/上卷(Roll-up)。Drill-up是在某一维上
      将低层次的细节数据概括到高层次的汇总数据，或者减少维数；而Drill-down则相反，它从汇总数据深入到细节数据进行观察或增加新维。 
    - 切片和切块：是在一部分维上选定值后，关心度量数据在剩余维上的分布。如果剩余的维只有两个，则是切片；如果有三个或以上，则是切块。
    - 旋转：是变换维的方向，即在表格中重新安排维的放置（例如行列互换）。
**** 星形结构

事实(Fact)和维(Dimension)         当我们观察数据时，通常想察看聚合数据的某种顺序。这些数据叫做度量(measure)。度量就是可以度量和相
加的数值。比如销售金额就是一种度量，每个订单都有销售金额。假设每天销售20个产品，每个5美元，销售总额就是100美元。销售金额就是我们想
关注的一种度量。此外我们可能还想知道当天的顾客数，是5位顾客一共买了20个产品，还是1位顾客买了所有的20个产品呢？销售金额和顾客数量就
是我们想关注的两个度量。        仅仅关心度量还不够。我们观察度量的时候都需要”by”条件。这些”by”条件就叫做维(dimension)。讨论销
售金额的时候，总要指定是某一天，某个季度或者某年的销售金额。几乎我们关心的任何度量都离不开时间维。我们可能还想按照产品名称或者产品
类型查看销售金额，这些条件都要对应到相应的维上。
        由上可知，设计星型数据库的时候，我们首先要确定我们想看什么信息(确定度量)，如何看这些信息(确定维)。


当我们开始创建维表的时候，有一些规则要牢记在心。第一，所有维表都要有一个基于单列的主键。这一主键列通常只是一标识列，包含自动递增的
数值，并没有真正的含义。有含义的信息都在其他列中，这些列包含了我们要查看的所有描述信息。比如在产品维中，包含了产品描述、类别、子类
等等。这些字段不能用来作为连接字段和其他表关联，但是包含了产品的所有描述信息。维表通常都比较胖，因为字段都比较多，每一字段都比较宽

创建事实表(Fact Table)
        事实表存放度量(measure)信息，或者称事实(fact)信息。度量是根据各个维计算出来的一些数值。比如说销售金额是个数值，我们可以按产品、安类型查看总数，可以查看任何时间段的所有总数。
        跟维表的又矮又胖相比，事实表一般显得又高又瘦。事实表很高，是因为他们拥有的记录数一般都很巨大。

** MDX

* 前端

** jquery-ui-portlet 
   - https://github.com/standino/jquery-ui-portlet

** Bootstrap 
   - http://www.bootcss.com/

** Backbone 
   - http://yujianshenbing.iteye.com/category/256978

** Angular-dashboard 
   - https://github.com/DataTorrent/malhar-angular-dashboard

** highcharts 
   - https://github.com/highslide-software/highcharts.com

** D3 
   - https://github.com/mbostock/d3

* 后端

** mysql
 - [[http://www.joyofdata.de/blog/setting-up-a-time-dimension-table-in-mysql/][SQL脚本插入时间维度表数据]]

** mongodb

** saiku https://github.com/OSBI/saiku-ui

*** Mondrian 介绍

Mondrian是一个BI开源项目。一个用Java写成的OLAP（在线分析性处理）引擎。它用MDX语言实现查询，从关系数据库(RDBMS)中读取数据。然后经过Java API用多维的方式对结果进行展示。

*** 编写 Mondrian Schema

**** Cube
创建数据立文体（CUBE）。在Mondrian里面的cube是以XML的形式定义的，他有一个GUI工具workbench来制作cube.具体例子见下节中的例子。

**** 权限
权限分为两种，一种是顶一下在Mondrian的cube中。可以设置cube，维度和度量的权限，具体例子见下节中的例子。另一种是数据权限，这个需要编写Java类实现。具体例子将在下面saiku相关小节进行介绍。

**** 例子
#+BEGIN_SRC xml
<Schema name="Sone">
  <Cube name="userInfo" caption="%{cube.user.info}" visible="true" cache="true" enabled="true">
    <Table name="factUserInfo">
    </Table>
    <Dimension visible="true" foreignKey="gender" highCardinality="false" name="Gender" caption="%{compensation.dimension.gender.caption}">
      <Hierarchy visible="true" hasAll="true" allMemberName="All Genders" primaryKey="value">
        <Table name="dimGender">
        </Table>
        <Level name="Gender" visible="true" column="name" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
        </Level>
      </Hierarchy>
    </Dimension>
    <Measure name="Count Person" column="userId" datatype="Integer" formatString="#,###" aggregator="count">
    </Measure>
  </Cube>
  <Cube name="&#37319;&#38144;&#36130;&#21153;&#22823;&#34920;" caption="&#37319;&#38144;&#36130;&#21153;&#22823;&#34920;" visible="true" description="&#37319;&#38144;&#36130;&#21153;&#22823;&#34920;" cache="true" enabled="true">
    <Table name="fact_sales_money">
    </Table>
    <Dimension type="StandardDimension" visible="true" foreignKey="dim_department_id" highCardinality="false" name="&#37096;&#38376;">
      <Hierarchy visible="true" hasAll="true" allMemberName="&#25152;&#26377;&#37096;&#38376;" primaryKey="dim_department_id">
        <Table name="dim_department">
        </Table>
        <Level name="&#19968;&#32423;&#37096;&#38376;" visible="true" column="dept_level_1" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#20108;&#32423;&#37096;&#38376;" visible="true" column="dept_level_2" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#19977;&#32423;&#37096;&#38376;" visible="true" column="dept_level_3" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#19968;&#32423;&#23703;&#20301;" visible="true" column="position_level_1" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#20108;&#32423;&#23703;&#20301;" visible="true" column="position_level_2" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#19977;&#32423;&#23703;&#20301;" visible="true" column="position_level_3" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
      </Hierarchy>
    </Dimension>
    <Dimension type="StandardDimension" visible="true" foreignKey="dim_vendor_id" highCardinality="false" name="&#20379;&#24212;&#21830;">
      <Hierarchy visible="true" hasAll="true" allMemberName="&#25152;&#26377;&#20379;&#24212;&#21830;" primaryKey="dim_vendor_id">
        <Table name="dim_vendor">
        </Table>
        <Level name="&#20379;&#24212;&#21830;&#31616;&#30721;" visible="true" column="vendor_code" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#20379;&#24212;&#21830;&#21517;&#31216;" visible="true" column="vendor_name" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
      </Hierarchy>
    </Dimension>
    <Dimension type="StandardDimension" visible="true" foreignKey="dim_brand_id" highCardinality="false" name="&#21697;&#29260;">
      <Hierarchy visible="true" hasAll="true" allMemberName="&#25152;&#26377;&#21697;&#29260;" primaryKey="dim_brand_id">
        <Table name="dim_brand">
        </Table>
        <Level name="&#21697;&#29260;ID" visible="true" column="brand_id" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#21697;&#29260;&#21517;&#31216;" visible="true" column="brand_name" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
      </Hierarchy>
    </Dimension>
    <Dimension type="StandardDimension" visible="true" foreignKey="dim_categories_id" highCardinality="false" name="&#20998;&#31867;">
      <Hierarchy visible="true" hasAll="true" allMemberName="&#25152;&#26377;&#20998;&#31867;" primaryKey="dim_categories_id">
        <Table name="dim_categories">
        </Table>
        <Level name="&#19968;&#32423;&#20998;&#31867;&#32534;&#30721;" visible="true" column="code_level_1" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#19968;&#32423;&#20998;&#31867;&#21517;&#31216;" visible="true" column="name_level_1" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#20108;&#32423;&#20998;&#31867;&#32534;&#30721;" visible="true" column="code_level_2" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#20108;&#32423;&#20998;&#31867;&#21517;&#31216;" visible="true" column="name_level_2" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#19977;&#32423;&#20998;&#31867;&#32534;&#30721;" visible="true" column="code_level_3" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
        <Level name="&#19977;&#32423;&#20998;&#31867;&#21517;&#31216;" visible="true" column="name_level_3" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
      </Hierarchy>
    </Dimension>
    <Dimension type="StandardDimension" visible="true" foreignKey="dim_form_type_id" highCardinality="false" name="&#34920;&#21333;&#31867;&#22411;">
      <Hierarchy visible="true" hasAll="true" allMemberName="&#25152;&#26377;&#34920;&#21333;" primaryKey="dim_form_type_id">
        <Table name="dim_form_type">
        </Table>
        <Level name="&#34920;&#21333;&#31867;&#22411;" visible="true" column="form_type" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
        </Level>
      </Hierarchy>
    </Dimension>
    <Dimension type="TimeDimension" visible="true" foreignKey="dim_time_id" highCardinality="false" name="&#26102;&#38388;">
      <Hierarchy visible="true" hasAll="true" allMemberName="&#25152;&#26377;&#26102;&#38388;" primaryKey="dim_time_id">
        <Table name="dim_time">
        </Table>
        <Level name="&#24180;" visible="true" column="dim_year" type="String" uniqueMembers="false" levelType="TimeYears" hideMemberIf="Never">
        </Level>
        <Level name="&#26376;" visible="true" column="dim_month" type="String" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never">
        </Level>
        <Level name="&#26085;" visible="true" column="dim_day" type="String" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never">
        </Level>
        <Level name="&#23395;&#24230;" visible="true" column="quarter" type="String" uniqueMembers="false" levelType="TimeQuarters" hideMemberIf="Never">
        </Level>
        <Level name="&#21608;" visible="true" column="week" type="String" uniqueMembers="false" levelType="TimeWeeks" hideMemberIf="Never">
        </Level>
      </Hierarchy>
    </Dimension>
    <Measure name="&#26410;&#32467;&#31639;&#37329;&#39069;" column="outstanding_amount" datatype="Numeric" formatString="#,###" aggregator="sum" visible="true">
    </Measure>
    <Measure name="&#24050;&#32467;&#31639;&#37329;&#39069;" column="settlement_amount" datatype="Numeric" formatString="#,###" aggregator="sum" visible="true">
    </Measure>
    <Measure name="&#24050;&#26680;&#38144;&#37329;&#39069;" column="verification_amount" datatype="Numeric" formatString="#,###" aggregator="sum" visible="true">
    </Measure>
    <Measure name="&#26410;&#26680;&#38144;&#37329;&#39069;" column="un_verification_amount" datatype="Numeric" formatString="#,###" aggregator="sum" visible="true">
    </Measure>
  </Cube>
  <Role name="ROLE_ADMIN">
    <SchemaGrant access="all">
      <CubeGrant cube="userInfo" access="all">
      </CubeGrant>
      <CubeGrant cube="&#37319;&#38144;&#36130;&#21153;&#22823;&#34920;" access="all">
      </CubeGrant>
    </SchemaGrant>
  </Role>
  <Role name="ROLE_USER">
    <SchemaGrant access="none">
      <CubeGrant cube="userInfo" access="none">
      </CubeGrant>
      <CubeGrant cube="&#37319;&#38144;&#36130;&#21153;&#22823;&#34920;" access="all">
      </CubeGrant>
    </SchemaGrant>
  </Role>
</Schema>

#+END_SRC
*** Saiku介绍

Saiku是一个模块化的开源分析套件，它提供轻量级的OLAP（联机分析处理），并且可嵌入、可扩展、可配置。

*** Saiku 基本配置

**** Schema 文件

    saiku/saiku-core/saiku-web-ui/src/main/resources/schema/sone.mondrian.xml

**** 连接数据库
  #+BEGIN_SRC
type=OLAP
name=saiku_sone
driver=mondrian.olap4j.MondrianOlap4jDriver
location=__my_company_1__bc:mondrian:Jdbc=__my_company_1__bc:mysql://192.168.229.76:3306/sone?characterEncoding=UTF-8;Catalog=res:schema/sone.mondrian.xml;JdbcDrivers=com.mysql.__my_company_1__bc.Driver;DynamicSchemaProcessor=mondrian.i18n.LocalizingDynamicSchemaProcessor;Locale=zh_CN;
username=root
password=123456
security.enabled=true
security.type=one2one
  #+END_SRC
**** 自定义角色
SaikuMondrianHelper.java  setRoles
#+BEGIN_SRC java
    public static class PeopleRole extends DelegatingRole {
        private final String repName;

        public PeopleRole(Role role, Schema schema, String repName) {
            super(((RoleImpl)role).makeMutableClone());
            this.repName = repName;
            defineGrantsForUser(schema);
            defineGrantsForCategory(schema);
        }

        private void defineGrantsForUser(Schema schema) {
            RoleImpl role = (RoleImpl)this.role;
            role.grant(schema, Access.NONE);

            Cube cube = schema.lookupCube("采销财务大表", true);
            role.grant(cube, Access.ALL);

            Hierarchy hierarchy = cube.lookupHierarchy(
                new Id.NameSegment("部门"), false);

            mondrian.olap.Level[] levels = hierarchy.getLevels();
            mondrian.olap.Level topLevel = levels[6];

            role.grant(hierarchy, Access.CUSTOM, null, null, RollupPolicy.FULL);
            role.grant(hierarchy.getAllMember(), Access.NONE);

            boolean foundMember = false;

            List <Member> members =
                schema.getSchemaReader().withLocus()
                    .getLevelMembers(topLevel, true);

            for (Member member : members) {
                //   System.out.println("memeber unique name"+member.getUniqueName());
                if (member.getUniqueName().contains("[" + repName + "]")) {
                    foundMember = true;
                    role.grant(member, Access.ALL);
                }
            }
        }

    private void defineGrantsForCategory(Schema schema) {
            RoleImpl role = (RoleImpl)this.role;
            role.grant(schema, Access.NONE);

            Cube cube = schema.lookupCube("采销财务大表", true);
            role.grant(cube, Access.ALL);

            Hierarchy hierarchy = cube.lookupHierarchy(
                new Id.NameSegment("分类"), false);

            mondrian.olap.Level[] levels = hierarchy.getLevels();
            mondrian.olap.Level topLevel = levels[6];

            role.grant(hierarchy, Access.CUSTOM, null, null, RollupPolicy.FULL);
            role.grant(hierarchy.getAllMember(), Access.NONE);

            boolean foundMember = false;

            List <Member> members =
                schema.getSchemaReader().withLocus()
                    .getLevelMembers(topLevel, true);

            for (Member member : members) {
                //   System.out.println("memeber unique name"+member.getUniqueName());
                if (member.getUniqueName().contains("[" + 3396 + "]")) {
                    foundMember = true;
                    role.grant(member, Access.ALL);
                }
            }
        }
    }


#+END_SRC



*** saiku 插件编写

    1. https://github.com/OSBI/saiku-ui/wiki/Plugins
    2. https://github.com/brenopolanski/saiku-plugin-boilerplate


**** SaikuChartPlus  https://github.com/it4biz/SaikuChartPlus

1) 编辑index.html, 插入如下代码:

<!--search for this and put the files under this-->
<script type="text/javascript" src="js/saiku/plugins/CCC_Chart/plugin.js" ></script>
<!--start js SaikuChartPlus-->
<script type="text/javascript" src="js/saiku/plugins/saiku-chart-plus/plugin.js" ></script>
<!--end js SaikuChartPlus-->
2) 拷贝插件代码到如下目录 /webapps/ROOT/js/saiku/plugins/

*** MDX

#+BEGIN_SRC

SELECT
NON EMPTY {Hierarchize({[Measures].[已结算金额]})} ON COLUMNS,
NON EMPTY {Hierarchize({{[Time.按周统计].[18], [Time.按周统计].[19], [Time.按周统计].[20], [Time.按周统计].[21]}})} ON ROWS
FROM [SalesMoneyReportv2]

#+END_SRC


*** 嵌入式图表的使用

**** 使用保存的query

这种使用方式需要先把要展示的表格和图表保存下来，通过传入文件路径来展示。这种方式适合不需要下钻的图表。

只要访问下面两个url就可以展示相应的表格和图表。

 1. http://sone.dev.__my_company_1__.com:8015/saiku-ui/embed/index.html#table/mon.saiku
 2. http://sone.dev.__my_company_1__.com:8015/saiku-ui/embed/index.html#chart/mon.saiku

井号（#）后面第一个参数表示是表格还是图表，后边是保存query的文件的路径。

还有一种方式显示图表，url如下。这种方式的优点是可以对表格进行过滤和查询。也可以使用saiku的插件进一步丰富其功能。
  - http://sone.dev.__my_company_1__.com:8015/saiku-ui/newindex.html?mode=view&plugin=true#query/open/mon.saiku


**** 使用mdx查询

这种方式比较灵活，可以编写多种mdx查询语句从后台获得数据，进行展示。

 1. http://sone.dev.__my_company_1__.com:8015/saiku-ui/embed/index.html#mdxtable/mon.saiku
 2. http://sone.dev.__my_company_1__.com:8015/saiku-ui/embed/index.html#mdxchart/mon.saiku

大家可以看看下面的代码了解一下具体实现。

**** 相关代码

index.js

#+BEGIN_SRC javascript
(function ($) {

    var myClient = new SaikuClient({
        server: "",
        path: "/rest/saiku/embed",
        user: "admin",
        password: "admin"
    });


    var AppRouter = Backbone.Router.extend({
        routes: {
            "mdxtable/*path": "showMdxTable",  
            "mdxchart/*path": "showMdxChart",  
            "table/*path": "showTable", 
            "chart/*path": "showChart"  
        },
        getPost: function(id) {
            alert(id);
        },
        showTable: function(path){
            myClient.execute({
                file: path,
                htmlObject: "#saiku",
                render: "table",
                params: {
                    family: "testparameter"
                }
            });

        },

        showChart: function (path){

            myClient.execute({
                file: path,
                htmlObject: "#saiku2",
                render: "chart",
                mode: "stackedBar",
                chartDefinition: {
                    colors: ['grey','red','blue'],
                    extensionPoints: {
                        xAxisLabel_textAngle: - Math.PI/3,
                        panel_fillStyle: "#EAEAEA"
                    }
                },
                zoom: true

            });
        },

        showMdxTable: function(path){
            myClient.executeMdx({
                file: path,
                htmlObject: "#saiku",
                render: "table",
                connection:'saiku_dashboard',
                catalog:'Sone',
                schema:'Sone',
                cube:'SalesMoneyReportv2',
                formatter:'flattened',
                limit:0,
                "mdx": $('#mdx').val(),
                params: {
                    family: "testparameter"
                }
            });

        },

        showMdxChart: function (path){

            myClient.executeMdx({
                file: path,
                htmlObject: "#saiku2",
                connection:'saiku_dashboard',
                catalog:'Sone',
                schema:'Sone',
                cube:'SalesMoneyReportv2',
                formatter:'flattened',
                limit:0,
                "mdx": $('#mdx').val(),
                render: "chart",
                mode: "stackedBar",
                chartDefinition: {
                    colors: ['grey','red','blue'],
                    extensionPoints: {
                        xAxisLabel_textAngle: - Math.PI/3,
                        panel_fillStyle: "#EAEAEA"
                    }
                },
                zoom: true

            });
        },
        defaultRoute : function(actions){
            alert(actions);
        },
        downloadFile: function( path ){
            alert(path); // user/images/hey.gif
        },
        loadView: function( route, action ){
            alert(route + "_" + action); // dashboard_graph
        }
    });

    var app_router = new AppRouter;

    Backbone.history.start();

})(jQuery);

#+END_SRC

SaikuEmbed.js
#+BEGIN_SRC javascript
/**
 * Base 64 module
 */
;(function (window) {

    var
    characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
    fromCharCode = String.fromCharCode,
    INVALID_CHARACTER_ERR = (function () {
        // fabricate a suitable error object
        try { document.createElement('$'); }
        catch (error) { return error; }}());

    // encoder
    window.Base64 || (
        window.Base64 = { encode: function (string) {
            var
            a, b, b1, b2, b3, b4, c, i = 0,
            len = string.length, max = Math.max, result = '';

            while (i < len) {
                a = string.charCodeAt(i++) || 0;
                b = string.charCodeAt(i++) || 0;
                c = string.charCodeAt(i++) || 0;

                if (max(a, b, c) > 0xFF) {
                    throw INVALID_CHARACTER_ERR;
                }

                b1 = (a >> 2) & 0x3F;
                b2 = ((a & 0x3) << 4) | ((b >> 4) & 0xF);
                b3 = ((b & 0xF) << 2) | ((c >> 6) & 0x3);
                b4 = c & 0x3F;

                if (!b) {
                    b3 = b4 = 64;
                } else if (!c) {
                    b4 = 64;
                }
                result += characters.charAt(b1) + characters.charAt(b2) + characters.charAt(b3) + characters.charAt(b4);
            }
            return result;
        }});

}(this));


var isIE = (function(){
    var undef, v = 3;

    var dav = navigator.appVersion;

    if(dav.indexOf('MSIE') != -1) {
        v  = parseFloat(dav.split('MSIE ')[1]);
        return v> 4 ? v : false;
    }
    return false;

}());

if ($.blockUI && !Dashboards) {
    $.blockUI.defaults.css = { "font-size" : "14px"};
    $.blockUI.defaults.overlayCSS = {};
    $.blockUI.defaults.blockMsgClass = 'processing';
    $.blockUI.defaults.fadeOut = 0;
    $.blockUI.defaults.fadeIn = 0;
    $.blockUI.defaults.ignoreIfBlocked = false;
}


var SaikuConfig = {
    server: null,
    path: null,
    user: null,
    password: null
};

var SaikuCall = {
    file: null,
    render: 'table', // table | chart
    mode: 'null', // table: sparkline, sparkbar - chart: line, bar, treemap, ...
    formatter: 'flattened', // should be left unless you want an hierarchical resultset
    htmlObject: "saiku",
    // table specific options for lazy loading table, doesn't quite work yet, so dont enable yet
    /*
     batch:              true,
     batchSize:          1000,
     batchIntervalSize:  20,
     batchIntervalTime:  20
     */
    params: {

    }

}
var SaikuRenderer = {
    "table" : SaikuTableRenderer,
    "chart" : SaikuChartRenderer
};

var SaikuClient = function(config) {
    this.config = _.extend(
        SaikuConfig,
        config
    );
};
SaikuClient.prototype.error = function(jqXHR, textStatus, errorThrown) {
    if (typeof console != "undefined" && console) {
        console.error(textStatus);
        console.error(jqXHR);
        console.error(errorThrown);
    }
};

SaikuClient.prototype.execute = function(usercall) {
    var self = this;
    var call = _.extend({},
                        SaikuCall,
                        usercall
                       );
    if (typeof console != "undefined" && console) {
        console.log(call);
    }
    var client = this.config;
    var parameters = {};
    if (call.params) {
        for (key in call.params) {
            parameters['param' + key] = call.params[key];
        }
    }
    parameters = _.extend(
        parameters,
        { "formatter" : call.formatter },
        { "file" : call.file }
    );


    if ($.blockUI && !Dashboards) {
        $(call.htmlObject).block({
            message: '<span class="saiku_logo" style="float:left">&nbsp;&nbsp;</span> Executing....'
        });
    }
    var params = {
        // path ? "rest/saiku/embed/"
        url:          client.server + (client.path ? client.path : "") + "/export/saiku/json",
        type:         'GET',
        cache:        false,
        data:         parameters,
        contentType:  'application/x-www-form-urlencoded',
        dataType:     "json",
        success:      function(data, textStatus, jqXHR) {

            if (call.render in SaikuRenderer) {
                var r = new SaikuRenderer[call.render](data, call);
                r.render();
                if ($.blockUI) {
                    $(call.htmlObject).unblock();
                }
            } else {
                alert('Render type ' + call.render + " not found!");
            }
            if ($.blockUI) {
                $(call.htmlObject).unblock();
            }
        },
        error:        function(jqXHR, textStatus, errorThrown) {
            if ($.blockUI) {
                $(call.htmlObject).unblock();
            }

            $(call.htmlObject).text("Error: " + textStatus);
            self.error(jqXHR, textStatus, errorThrown);
        },
        crossDomain: true,
        async:        true,
        beforeSend:   function(request) {
            if (client && client.user && client.password) {
                var auth = "Basic " + Base64.encode(
                    client.user + ":" + client.password
                );
                request.setRequestHeader('Authorization', auth);
                return true;
            }
        }
    };

    $.ajax(params);
};

SaikuClient.prototype.executeMdx = function(usercall) {
    var self = this;
    var call = _.extend({},
                        SaikuCall,
                        usercall
                       );
    if (typeof console != "undefined" && console) {
        console.log(call);
    }
    var client = this.config;
    var parameters = {};
    if (call.params) {
        for (key in call.params) {
            parameters['param' + key] = call.params[key];
        }
    }
    parameters = _.extend(
        parameters,
        { "connection" : call.connection },
        { "catalog" : call.catalog },
        { "schema" : call.schema },
        { "cube" : call.cube },
        { "formatter" : call.formatter },
        { "type" : call.type },
        { "limit" : call.limit },
        { "mdx" : call.mdx }
    );


    if ($.blockUI && !Dashboards) {
        $(call.htmlObject).block({
            message: '<span class="saiku_logo" style="float:left">&nbsp;&nbsp;</span> Executing....'
        });
    }

    var queryID = "/rest/saiku/embed/query/"+Math.floor(Math.random()*24000);
    //创建一个query
    $.ajax({
        url: queryID,
        type: "POST",
        data:  parameters,

        success: function(data) {

            $.ajax({
                url: queryID+"/result/flat",
                type: "POST",
                data: parameters,
                contentType:  'application/x-www-form-urlencoded',
                dataType:     "json",
                success:      function(data, textStatus, jqXHR) {

                    if (call.render in SaikuRenderer) {
                        var r = new SaikuRenderer[call.render](data, call);
                        r.render();
                        if ($.blockUI) {
                            $(call.htmlObject).unblock();
                        }
                    } else {
                        alert('Render type ' + call.render + " not found!");
                    }
                    if ($.blockUI) {
                        $(call.htmlObject).unblock();
                    }
                },
                error:        function(jqXHR, textStatus, errorThrown) {
                    if ($.blockUI) {
                        $(call.htmlObject).unblock();
                    }

                    $(call.htmlObject).text("Error: " + textStatus);
                    self.error(jqXHR, textStatus, errorThrown);
                },
                crossDomain: true,
                async:        true,
                beforeSend:   function(request) {
                    if (client && client.user && client.password) {
                        var auth = "Basic " + Base64.encode(
                            client.user + ":" + client.password
                        );
                        request.setRequestHeader('Authorization', auth);
                        return true;
                    }
                }

            });


        }

    });


};

#+END_SRC


** optiq 


  - https://github.com/julianhyde/optiq
  - [[http://www.slideshare.net/julianhyde/optiq-a-sql-frontend-for-everything][Optiq: a SQL front-end for everything]]
  - http://www.coderanch.com/t/621003/big-data/databases/Mondrian-Action-supported-databases
  - http://www.slideshare.net/planetcassandra/south-bay-cassandrealtime-analytics-using-cassandra-spark-and-shark-at-ooyala
  - https://wiki.apache.org/incubator/OptiqProposal
  - http://incubator.apache.org/projects/optiq.html


** spark SQL 
  - http://spark.apache.org/sql/
   - [[http://spark.apache.org/docs/latest/sql-programming-guide.html][Running SQL on RDDs]]
  - [[http://aws.amazon.com/articles/Elastic-MapReduce/4926593393724923][Run Spark and Shark on Amazon Elastic MapReduce]]
  - [[http://blog.csdn.net/wyc09/article/details/19417663][编写Java程序访问Spark环境]]
  - [[http://spark.apache.org/docs/latest/sql-programming-guide.html][Spark SQL Programming Guide]]




** pig

** hive

** ooize

* 参考资料

 - [[http://blog.csdn.net/leamonjxl/article/details/6681112][数据仓库的架构主要有星型和雪花型两种方式]]
 - http://wenku.baidu.com/view/7a2615a20029bd64783e2cf1.html
 - http://blog.sina.com.cn/s/blog_7d8f0a900100qplj.html
 - http://www.huqiwen.com/2012/06/15/olap-abstruct-and-mondrian-quick-start/
 - [[http://customme.iteye.com/blog/1880478][Saiku Server环境搭建]]
 - [[http://blog.csdn.net/longshenlmj/article/details/19111227][Saiku去掉登录模块]]
 - https://github.com/pentaho/mondrian
 - https://github.com/OSBI/saiku
 - http://ci.analytical-labs.com/
 - http://docs.analytical-labs.com/
 - How to quickly add a date dimension to a Pentaho Mondrian OLAP cube http://www.freeportmetrics.com/devblog/2012/11/02/how-to-quickly-add-date-dimension-to-pentaho-mondrian-olap-cube/
 - Mondrian 文档 http://mondrian.pentaho.com/documentation/schema.php#Time_dimensions
  - http://blog.analytical-labs.com/
  - http://forums.meteorite.bi/
  - http://jira.meteorite.bi/secure/Dashboard.jspa
  - http://docs.analytical-labs.com/
  - http://jira.pentaho.com/browse/MONDRIAN-1584
  - Backbone入门指南（一）：什么是Backbone? http://yujianshenbing.iteye.com/blog/1748447
  - http://documentcloud.github.com/underscore/
 - [[http://blog.csdn.net/adparking/article/details/6676571][mysql中的load data infile用法]]
 - [[http://www.blogjava.net/qileilove/archive/2012/04/23/376353.html][定时备份mysql数据库 并删除7天前的备份 （windows linux ）]]
 - [[http://blog.csdn.net/jinkelei/article/details/6833997][mysql定时备份和删除]]
 - [[http://my.oschina.net/zimingforever/blog/91287][mysql删除大表的部分数据]]

    /?mode=table&plugin=true#query/open/aaf.saiku

   /saiku-ui/?mode=table&plugin=true#query/open/demo.saiku

   /saiku-ui/?mode=view&plugin=true#query/open/demo.saiku
